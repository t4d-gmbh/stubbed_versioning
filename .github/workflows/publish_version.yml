name: Publish a version

on:
  pull_request:
    types:
      - closed

env:
  LABEL_PUBLISHED: 'release::published'

jobs:
  release-version:
    if: ${{ github.event.pull_request.merged && startsWith(github.head_ref, 'release-') }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      OWNER: ${{ github.repository_owner }}
      REPO: ${{ github.event.repository.name }}
      EVENT: ${{ github.event.html_url }}  # This is either the issue or pr
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      # check if the pr is labeled as published already
      - name: Check if the version is labeled with ${{ env.LABEL_PUBLISHED }}
        id: published
        run: |
          if $( gh pr view $EVENT --json "labels" --jq ".[].[].name" | grep --quiet ${{ env.LABEL_PUBLISHED }}); then
            echo "LABELED=1" >> $GITHUB_OUTPUT
            echo "TO_PUBLISH=0" >> $GITHUB_OUTPUT
          else
            echo "LABELED=0" >> $GITHUB_OUTPUT
            echo "TO_PUBLISH=1" >> $GITHUB_OUTPUT
          fi
      - name: Attempt to create label ${{ env.LABEL_PUBLISHED }}
        needs: published
        if: needs.published.outputs.to_publish
        run: |
          gh label create ${{ env.LABEL_PUBLISHED }} --repo ${{ env.OWNER }}/${{ env.REPO }}
        continue-on-error: true  # make sure the next steps run also on failure
      - name: Get the version to release
        if: steps.published.outputs.to_publish
        id: release_version
        run: |
          git fetch --filter=tree:0 origin +refs/tags/*:refs/tags/*
          echo "VERSION=$(echo ${{ github.head_ref }}|grep -Eo '[0-9]+.[0-9]+.[0-9]+')" >> $GITHUB_OUTPUT
          echo "PREVIOUS_VERSION=`echo $(git tag --list | grep -E '[0-9]+.[0-9]+.[0-9]+$' | tail -n1)`" >> $GITHUB_OUTPUT
      - name: Remove previous releases of the target tag, if existing
        if: steps.published.outputs.to_publish
        run: |
          if script -q -e -c "gh release view ${{ steps.release_version.outputs.version }}"; then
            # removing previous release along with associated tag
            gh release delete ${{ steps.release_version.outputs.version }} \
              --cleanup-tag -y \
              --repo ${{ env.OWNER }}/${{ env.REPO }}
          else
            # non-exist
            echo "No trace of a previous release."
          fi
      - name: Prepare Release note
        if: steps.published.outputs.to_publish
        # this gets the first the changes to the previous clean tag (including manual edits)
        run: |
          awk '/<a name="${{ steps.release_version.outputs.version }}".*/{a=1};a;/<a name="${{ steps.release_version.outputs.previous_version }}"*/{exit}' CHANGELOG.md | head -n -1 >> body.md
      - name: Create tag and release
        if: steps.published.outputs.to_publish
        run: >
          gh release create ${{ steps.release_version.outputs.version }}
            --target ${{ github.event.pull_request.head.sha }}
            --latest
            --title "${{ steps.release_version.outputs.version }}"
            --notes-file body.md
            --repo ${{ env.OWNER }}/${{ env.REPO }}
      - name: Adding the label ${{ env.LABEL_PUBLISHED }}
        if: steps.published.outputs.to_publish
        run: |
          gh pr edit $EVENT --add-label ${{ env.LABEL_PUBLISHED }}
        shell: bash
      # - name: Upload additional artifacts to the release
      #   run: |
      #     gh release upload ${{ steps.release_version.outputs.version }} \
      #       some_file.md \
      #       other_file.md \
      #       --clobber
      #       --repo ${{ env.OWNER }}/${{ env.REPO }}
