name: On label workflow

on:
  pull_request:
    types: [ labeled ]

env:
  LABEL_CHECK: 'special::check'
  LABEL_SUCCESS: 'special::passed'
  LABEL_FAILURE: 'special::failed'

jobs:
  check_label_exist:
    runs-on: ubuntu-latest
    outputs:
      label_check: ${{ steps.set_label_check.outputs.label_check }}
    steps:
      - name: Assert labels are defined
        run: |
          gh labels create ${{ env.LABEL_CHECK }}
          gh labels create ${{ env.LABEL_SUCCESS }}
          gh labels create ${{ env.LABEL_FAILURE }}
          # echo $(gh label list --json='name' --jq '.[].name') >> LABELS.txt
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - id: set_label_check
        run: echo "label_check=${{ env.LABEL_CHECK  }}" >> "$GITHUB_OUTPUT"
  run_special_check:
    if: github.event.label.name == needs.check_label_exist.outputs.label_check
    needs:
      - check_label_exist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Doing something on demand
        id: some_task
        continue-on-error: true  # make sure the next steps run also on failure
        run: echo Hello, world!
      - name: Updating the label accordingly
        run: |
          gh pr edit $EVENT_ID --remove-label ${{ env.LABEL_CHECK }}
          if [ ${{ steps.some_task.outcome }} == "success" ]; then
            gh pr edit $EVENT_ID --remove-label ${{ env.LABEL_CHECK }}
            gh pr edit $EVENT_ID --add-label ${{ env.LABEL_SUCCESS }}
            exit 0
          elif [ ${{ steps.some_task.outcome }} == "failure" ]; then
            gh pr edit $EVENT_ID --add-label ${{ env.LABEL_FAILURE }}
            exit 1
          else
            gh pr edit $EVENT_ID --add-label ${{ env.LABEL_CHECK }}
            echo "On demand task outcome was ${{ steps.some_task.outcome }}"
          fi
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          EVENT_ID: ${{ github.event.issue.id }}  # This is either the issue or pr id
