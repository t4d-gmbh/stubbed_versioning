name: Runs on non-release pull requests

on:
  push:
    branches-ignore:
      - "release-[0-9]+.[0-9]+.[0-9]+"
        
env:
  LABEL_PUBLISHED: 'release::published'


jobs:
  development_checks:
    if: github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      OWNER: ${{ github.repository_owner }}
      REPO: ${{ github.event.repository.name }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # NOTE: This might be needed to assert that we get the full history
                          #       for the changelog.
      - name: Attempt to create label ${{ env.LABEL_PUBLISHED }}
        run: |
          gh label create ${{ env.LABEL_PUBLISHED }} --repo ${{ env.OWNER }}/${{ env.REPO }}
      - name: Determine associated Pull request
        id: get_pr
        run: |
          echo $(gh pr list --json 'number,headRefName' --jq '.[] | select(.headRefName | contains("$GITHUB_SHA")) | .number')
          echo "PR=`echo $(gh pr list --json 'number,headRefName' --jq '.[] | select(.headRefName | contains("$GITHUB_SHA")) | .number')`" >> $GITHUB_OUTPUT
          # TODO: remove this is for debugging
          cat $GITHUB_OUTPUT
      - name: Check if the pull request is labeled with ${{ env.LABEL_PUBLISHED }}  # 2
        id: published
        run: |
          if $( gh pr view ${{ steps.get_pr.outputs.pr }} --repo ${{ env.OWNER }}/${{ env.REPO }} --json "labels" --jq ".[].[].name" | grep --quiet ${{ env.LABEL_PUBLISHED }}); then
            echo "LABELED=true" >> $GITHUB_OUTPUT
          else
            echo "LABELED=false" >> $GITHUB_OUTPUT
          fi
          cat $GITHUB_OUTPUT
      - name: Get the version to release  # 2
        if: ${{ steps.published.outputs.labeled == false && steps.get_pr.output.pr }}
        id: release_version
        run: |
          git fetch --filter=tree:0 origin +refs/tags/*:refs/tags/*
          echo "VERSION=$(echo ${{ github.head_ref }}|grep -Eo '[0-9]+.[0-9]+.[0-9]+')" >> $GITHUB_OUTPUT
          echo "PREVIOUS_VERSION=`echo $(git tag --list | grep -E '[0-9]+.[0-9]+.[0-9]+$' | tail -n1)`" >> $GITHUB_OUTPUT
